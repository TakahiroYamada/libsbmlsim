           libSBMLSim NEWS -- History of user-visible changes

- Last modified: Thu, 04 Apr 2013 02:56:39 +0900

======================================================================
Version 1.2.0 (2013-04-04)
======================================================================

* New features

  - CMake uses C_INCLUDE_PATH, DYLD_LIBRARY_PATH and
    LD_LIBRARY_PATH to find libSBML.

* Bug fixes

  - Fixed to support fast and reversible reaction
    (00986, 00987, 00988).

  - Fixed crash when ASTNode only have 1 or 0 child under '+', '*',
    'AND', 'OR', 'XOR' ASTNodes. (01112, 01113, 01114)

  - Fixed crash when piecewise have odd number of children (which
    means when piecewise doesn't have "otherwise" node)
    (01115, 01116).

  Now, libsbmlsim passed all the tests from 00001 to 01185.

======================================================================
Version 1.1.0 (2013-01-08)
======================================================================

* New features

  - New integrators (5th order Runge-Kutta Fehlberg, 5th order Cash-Karp)
    are included in this release. Both new integrators support variable
    step size integration.
     = 5th order Runge-Kutta Fehlberg : MTHD_RUNGE_KUTTA_FEHLBERG_5
     = 5th order Cash-Karp : MTHD_NAME_CASH_KARP

  - The C# bindings functions are include in this release. Please see
    examples/csharp/Test.cs for the sample code.
    
  - Both 32bit(x86) and 64bit(x86_64) build for Windows are available.
  
  - Binary Installer is available for Windows, MacOSX and Linux.

* Bug fixes

  - Memory leaks in free_mySBML_objects() have been fixed.

* API changes

  - myResult* simulateSBMLModel() now requires 3 additional parameters for
    variable step integration. 
    myResult* simulateSBMLModel(Model_t *m, double sim_time, double dt,
                                int print_interval, int print_amount,
                                int method, int use_lazy_method,
                                double atol, double rtol, double facmax);
     = double atol;  Absolute error tolernace
     = double rtol;  Relative error tolerance
     = double facmax; Maximum acceptable increasing factor
    If you don't know the exact value for above 3 values, please just assign
    "0.0" for all 3 values, then libsbmlsim will use the default values for
    the integration.

======================================================================
Version 1.0.0 (2012-04-04)
======================================================================

* Initial release, 04 April 2012.

