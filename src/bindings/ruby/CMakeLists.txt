# This is a CMake example for Ruby

cmake_minimum_required(VERSION 2.8)

FIND_PACKAGE(SWIG 2.0 REQUIRED)
INCLUDE(${SWIG_USE_FILE})

FIND_PROGRAM(RUBY_EXECUTABLE NAMES ruby)
#SET(RUBY_EXECUTABLE /usr/bin/ruby)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['MAJOR']" OUTPUT_VARIABLE RBCONFIG_MAJOR)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['MINOR']" OUTPUT_VARIABLE RBCONFIG_MINOR)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['TEENY']" OUTPUT_VARIABLE RBCONFIG_TEENY)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['rubyhdrdir']" OUTPUT_VARIABLE RBCONFIG_RUBYHDRDIR)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['includedir']" OUTPUT_VARIABLE RBCONFIG_INCLUDEDIR)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['libdir']" OUTPUT_VARIABLE RBCONFIG_LIBDIR)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['LIBRUBY']" OUTPUT_VARIABLE RBCONFIG_LIBRUBY)
EXECUTE_PROCESS(COMMAND ${RUBY_EXECUTABLE} -r rbconfig -e "print RbConfig::CONFIG['archdir']" OUTPUT_VARIABLE RBCONFIG_ARCHDIR)
SET(RUBY_VERSION "${RUBY_VERSION_MAJOR}.${RUBY_VERSION_MINOR}.${RUBY_VERSION_TEENY}")

SET(RUBY_INCLUDE_PATH ${RBCONFIG_RUBYHDRDIR} ${RBCONFIG_ARCHDIR})
SET(RUBY_LIBRARY "${RBCONFIG_LIBDIR}/${RBCONFIG_LIBRUBY}")
INCLUDE_DIRECTORIES(${RUBY_INCLUDE_PATH})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src/libsbmlsim ${LIBSBML_INCLUDE_DIR})

SET(CMAKE_SWIG_FLAGS "")

SET_SOURCE_FILES_PROPERTIES(libsbmlsim.i PROPERTIES CPLUSPLUS OFF)
SET_SOURCE_FILES_PROPERTIES(libsbmlsim.i PROPERTIES SWIG_FLAGS "-includeall")
SWIG_ADD_MODULE(libsbmlsim ruby libsbmlsim.i ${SOURCES_LIB})
SWIG_LINK_LIBRARIES(libsbmlsim ${RUBY_LIBRARY} sbml)
